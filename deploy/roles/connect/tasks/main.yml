---
- name: Update APT
  apt:
    name: aptitude
    state: latest
    update_cache: true

- name: Install security updates.
  apt:
    default_release: '{{ ansible_distribution_release }}-security'
    update_cache: '{{ apt_update_cache }}'
    upgrade: dist
  tags:
    - packages
    - packages.security
    - skip_ansible_lint

- name: Install required system packages
  apt:
    pkg:
      - apt-transport-https
      - ca-certificates
      - curl
      - software-properties-common
      - python3-pip
      - virtualenv
      - python3-setuptools
      - gnupg
      - acl
    state: latest
    update_cache: true
  tags:
    - packages

- name: Add Docker GPG apt Key
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present

- name: Add Docker Repository
  apt_repository:
    repo: deb https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
    state: present

- name: Update apt and install docker-ce
  apt:
    pkg:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
    state: latest
    update_cache: true

- name: Install Docker Module for Python
  pip:
    name: docker

- name: Create the app group.
  group:
    name: '{{ app_group }}'
    system: yes
    state: present
  tags: auth

- name: Create the app user.
  user:
    name: '{{ app_user }}'
    group: '{{ app_group }}'
    groups:
      - docker
    shell: /bin/bash
    state: present
  tags: auth

- name: Add public key for deploy
  authorized_key:
    user: '{{ app_user }}'
    state: present
    key: "{{ lookup('community.general.onepassword', 'Deploy SSH Key', subdomain='dimagi', vault='CommCare Connect', field='public key') }}"
    exclusive: yes
  tags: auth

- name: Create {{ base_dir }} folder.
  file:
    path: '{{ base_dir }}'
    group: '{{ app_group }}'
    mode: 0755
    state: directory

- name: Create {{ project_dir }}.
  file:
    path: '{{ project_dir }}'
    owner: '{{ app_user }}'
    group: '{{ app_group }}'
    mode: 0750
    state: directory

- name: Create Docker Env
  template:
    src: 'docker.env.j2'
    dest: '{{ docker_env_file }}'
    owner: '{{ app_user }}'
    group: '{{ app_group }}'
    mode: 0644
  tags:
    - django_settings
